
I will introduce CFFI, a way to call C libraries from Python.
It was designed in 2012 to get away from Python's C extension
modules, which require hand-written CPython-specific C code.
CFFI is arguably simpler to use: you call C from Python
directly, instead of going through an intermediate layer.  It is
not tied to CPython's internals, and works natively on two
different Python implementations: CPython and PyPy.  (It is also
a big success, according to the download statistics.)

PyPy is an alternative Python implementation, which is highly
compatible with CPython but rewritten from scratch---in Python.
It is much faster than the standard CPython on long-running
tasks thanks to its Just-in-Time compiler.  I will talk about it
during the later part of the talk.
