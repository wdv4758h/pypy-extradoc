#!/usr/bin/python

# benchmarks-repo at a26f2fb58413

# for now: avg & stddev of the best



from plot_performance import plot_speedups
import matplotlib
import os
import sys
matplotlib.use('gtkagg')

from matplotlib import rc
#rc('font',**{'family':'sans-serif','sans-serif':['Helvetica']})
## for Palatino and other serif fonts use:
rc('font',**{'family':'serif','serif':['Palatino']})
rc('text', usetex=True)

args = None
import matplotlib.pyplot as plt
# import pprint - slow as hell


interps_styles = {
    "pypy-stm-nojit": {'fmt':'r-', 'linewidth':2},
    "cpython": {'fmt':'b', 'dashes':(1,1)},
    "pypy-nojit": {'fmt':'g', 'dashes':(5, 2)},
    "jython": {'fmt':'m', 'dashes':(2, 5)},
    "best": {'fmt':"k:"}        # only fmt allowed
}


#    pypy-c-paper-nojit bench.py -k5 raytrace/raytrace.py 1-4 256 256
#    pypy-c-paper-nojit bench.py -k5 btree/btree.py 1-4 500000
#    pypy-c-paper-nojit bench.py -k5 skiplist/skiplist.py 1-4 200000
#    pypy-c-paper-nojit bench.py -k5 threadworms/threadworms.py 1-4 500000
#    pypy-c-paper-nojit bench.py -k5 mandelbrot/mandelbrot.py 1-4 64 512 512
#    pypy-c-paper-nojit multithread-richards.py 30 1-4 # report runtime
# miller_rabin: bench.py -k5 primes/primes.py 1-4 400000
# mersenne:  bench.py -k5 mersenne/mersenne.py $i 1500

from collections import OrderedDict
benchs = OrderedDict([
     ("btree (small)", {
        "pypy-stm-nojit":[
            [7.98744797707,7.95994615555,8.0069360733,8.01075410843,7.99107217789],
            [4.4982790947,4.51797103882,4.53245615959,4.51872205734,4.49158000946],
            [3.48803210258,3.5547580719,3.51397109032,3.51541280746,3.50235295296],
            [3.0812599659,3.05026102066,3.07854914665,3.05468702316,3.05405092239],
        ],
        "cpython":[
            [1.89,1.89,1.90,1.90,1.90],
            [5.70,5.70,5.72,5.74,5.75],
            [5.90,5.92,5.97,5.93,5.91],
            [5.95,5.92,5.92,5.93,5.90],
        ],
        # "jython":[
        #     [1.76,1.84],
        #     [2.60,2.46,2.6],
        #     [2.56,2.6,2.51],
        #     [2.57,2.52,2.48]
        # ],
        "pypy-nojit":[
            [6.18,6.17,6.17,6.18,6.19],
            [9.94,9.96,9.96,9.93,9.93],
            [10.36,10.33,10.38,10.37,10.40],
            [10.53,10.52,10.53,10.53,10.54],
        ]}),

    ("skiplist (small)", {
        "pypy-stm-nojit":[
            [5.3692650795,5.75404596329,5.80874490738,5.56507706642,5.54502797127],
            [3.33223390579,3.43795180321,3.7308909893,3.6313188076,3.4803340435],
            [2.90017795563,2.96001410484,2.98225808144,2.90836501122,3.08461618423],
            [2.69811701775,2.71903181076,2.7594909668,2.6924469471,2.68277978897],
        ],
        "cpython":[
            [3.18362903595,3.13687205315,3.09498882294,2.87599921227,3.094383955],
            [4.9131629467,5.09300899506,4.8633351326,5.01421904564,5.00006604195],
            [5.0695669651,5.18470811844,5.03273797035,5.17617797852,4.92464590073],
            [5.08509016037,5.05335688591,5.1101269722,5.26950407028,5.11297392845],
        ],
        # "jython":[
        #     [1.38,1.33,1.47,1.40],
        #     [1.8,1.77,1.81],
        #     [1.81,1.79,1.88],
        #     [1.99,1.92,1.74,1.84]
        # ],
        "pypy-nojit":[
            [3.99729990959,3.92795300484,3.92997407913,4.02246403694,4.16354703903],
            [6.20531105995,6.0312640667,5.67126297951,5.88649582863,5.58283090591],
            [6.22896409035,6.35634803772,6.38776803017,6.00280714035,6.2800180912],
            [6.13741707802,6.11261510849,6.20782995224,6.05345606804,6.21988797188],
        ]}),

    ("threadworms (small)", {
        "pypy-stm-nojit":[
            [4.66151094437,4.58688688278,4.66727614403,4.6772108078,4.6156001091],
            [2.49641013145,2.50251197815,2.49980187416,2.49767017365,2.49619984627],
            [1.84332799911,1.86481595039,1.85224509239,1.84722995758,1.86878705025],
            [1.548361063,1.55502295494,1.54036188126,1.51436495781,1.55404090881],
        ],
        "cpython":[
            [1.63531804085,1.63171005249,1.64426994324,1.63068985939,1.63233208656],
            [5.11088013649,5.0750939846,5.07781815529,5.03861713409,5.14281582832],
            [5.18783211708,5.15396308899,5.14551186562,5.12670898438,5.14967012405],
            [5.2029311657,5.18416690826,5.16408801079,5.17987704277,5.16225814819],
        ],
        # "jython":[
        #     [2.73,2.38,2.63,2.4],
        #     [3.0,2.87,3.3,3.1],
        #     [3.35,3.22,3.19],
        #     [3.19,3.37,3.26,3.36]
        # ],
        "pypy-nojit":[
            [3.96425199509,3.92935299873,3.9230401516,3.93678808212,3.9455499649],
            [7.18407416344,7.18444395065,7.16915011406,7.18182110786,7.22779583931],
            [7.66615414619,7.66010093689,7.72703194618,7.71287798882,7.72050714493],
            [7.84829282761,7.84318208694,7.78388905525,7.74968695641,7.74719285965],
        ]}),

    ("miller-rabin (small)", {
        "pypy-stm-nojit":[
            [3.369349956512451, 3.3623909950256348, 3.3570539951324463, 3.35870099067688, 3.352569103240967],
            [1.8622829914093018, 1.8384361267089844, 1.8307039737701416, 1.8440592288970947, 1.8353259563446045],
            [1.4145839214324951, 1.3829829692840576, 1.3893311023712158, 1.4124789237976074, 1.3802859783172607],
            [1.259462833404541, 1.2429590225219727, 1.246514081954956, 1.216398000717163, 1.2270379066467285]
        ],
        "cpython":[
            [1.463728904724121, 1.4588379859924316, 1.4599599838256836, 1.454383134841919, 1.4613091945648193],
            [1.9370648860931396, 1.9515810012817383, 1.9363758563995361, 1.9516470432281494, 1.9729619026184082],
            [2.0382211208343506, 2.0417628288269043, 2.038292169570923, 2.033823013305664, 2.0392959117889404],
            [2.0457639694213867, 2.0550150871276855, 2.045275926589966, 2.0547900199890137, 2.058414936065674]
        ],
        "pypy-nojit":[
            [3.1500821113586426, 3.1333930492401123, 3.133725881576538, 3.1395609378814697, 3.137906074523926],
            [5.383965015411377, 5.348900079727173, 5.329493999481201, 5.293528079986572, 5.336282014846802],
            [5.570706129074097, 5.564241170883179, 5.5810630321502686, 5.539607048034668, 5.5388758182525635],
            [5.5085608959198, 5.483498811721802, 5.5816099643707275, 5.592865943908691, 5.601343870162964]
        ]}),

    ("mandelbrot (small)", {
        "pypy-stm-nojit":[
            [5.3069088459,5.2796959877,5.27015900612,5.3081278801,5.32982206345],
            [2.67205810547,2.66844701767,2.66896700859,2.68082690239,2.6778409481],
            [1.87407612801,1.89018201828,1.88588881493,1.87249279022,1.88197517395],
            [1.50376915932,1.55750012398,1.49635004997,1.50658798218,1.5112760067],
        ],
        "cpython":[
            [1.66689109802,1.70921182632,1.67385601997,1.74684906006,1.67685079575],
            [2.22828507423,2.22786307335,2.21894907951,2.23693585396,2.23923707008],
            [2.27540802956,2.28734898567,2.26518392563,2.2811088562,2.27695202827],
            [2.28982901573,2.28482198715,2.29300618172,2.29116606712,2.28355097771],
        ],
        # "jython":[
        #     [5.56,5.61,5.59,5.55],
        #     [2.84,3,2.8,2.96],
        #     [2.13,2.03,2.04,2.11],
        #     [1.8,1.74,1.8,1.88]
        # ],
        "pypy-nojit":[
            [3.37114810944,3.36375617981,3.36287212372,3.36206793785,3.36504197121],
            [4.47998595238,4.47378611565,4.46991205215,4.47737216949,4.41863703728],
            [4.3745610714,4.37568807602,4.37834095955,4.37904405594,4.38698601723],
            [4.40002799034,4.40542793274,4.40231585503,4.40534210205,4.39605498314],
        ]}),

    ("raytrace (small)", {
        "pypy-stm-nojit":[
            [8.09555792809,8.03761792183,8.07105588913,8.08723092079,8.02405285835],
            [4.23407101631,4.20152997971,4.19831204414,4.20036005974,4.19185209274],
            [2.99346899986,3.01209020615,3.02385997772,2.99872112274,3.01878595352],
            [2.58209013939,2.62102484703,2.58993005753,2.59897303581,2.5549788475],
        ],
        "cpython":[
            [2.52900099754,2.52002096176,2.53882884979,2.53405308723,2.52506089211],
            [2.64264392853,2.62728977203,2.68032217026,2.6406929493,2.651679039],
            [2.74740791321,2.75495100021,2.73957586288,2.74933600426,2.72902297974],
            [2.85847210884,2.85967087746,2.87045097351,2.87352895737,2.87047505379],
        ],
        # "jython":[
        #     [2.95,2.95,2.96],
        #     [1.65,1.68,1.54],
        #     [1.2,1.15,1.3,1.3],
        #     [1.09,0.9,0.97,0.99,1.03]
        # ],
        "pypy-nojit":[
            [5.2403049469,5.23123502731,5.23440098763,5.25973105431,5.22721982002],
            [6.54222011566,6.54369497299,6.55081796646,6.5521800518,6.56022405624],
            [6.10841608047,6.15412402153,6.15307998657,6.16904401779,6.13451099396],
            [5.46543121338,5.47703313828,5.47254896164,5.49223995209,5.50018310547],
        ]}),

    ("richards (small)", {
        "pypy-stm-nojit":[
            [9.90,9.89,9.85,9.92,9.95],
            [5.50,5.55,5.52,5.48,5.52],
            [4.06,4.09,4.09,4.09,4.08],
            [3.63,3.61,3.54,3.51,3.54],
        ],
        "cpython":[
            [2.51,2.45,2.55,2.51,2.50],
            [3.87,3.71,3.88,3.81,3.75],
            [3.72,3.74,3.71,3.70,3.72],
            [3.76,3.78,3.79,3.80,3.76],
        ],
        # "jython":[
        #     [3.39,3.31,3.7],
        #     [2.32,1.95,2.18],
        #     [1.86,1.66],
        #     [1.49,1.63,1.59]
        # ],
        "pypy-nojit":[
            [5.95,6.02,5.99,5.92,6.03],
            [7.88,7.78,7.77,7.69,7.79],
            [7.66,7.66,7.81,7.75,7.53],
            [7.89,7.93,7.81,7.69,7.80]
        ]}),

    ("mersenne (small)", {
        "pypy-stm-nojit":[
            [3.6719789505004883, 3.6668028831481934, 3.664036989212036, 3.6665987968444824, 3.6641900539398193],
            [2.137367010116577, 1.9911909103393555, 1.9913787841796875, 1.9875690937042236, 1.988551139831543],
            [2.0355780124664307, 2.0366389751434326, 2.029282808303833, 2.0356709957122803, 2.0340609550476074],
            [1.9997708797454834, 1.996995210647583, 2.0678999423980713, 2.075084924697876, 1.994607925415039]
        ],
        "cpython":[
            [3.263484001159668, 3.2587788105010986, 3.25673508644104, 3.2573680877685547, 3.255321979522705],
            [3.2739717960357666, 3.274899959564209, 3.293348789215088, 3.2946629524230957, 3.29618501663208],
            [3.3265891075134277, 3.2955169677734375, 3.2899580001831055, 3.305911064147949, 3.2877209186553955],
            [3.2929179668426514, 3.2984700202941895, 3.2903239727020264, 3.301953077316284, 3.2956490516662598]
        ],
        "pypy-nojit":[
            [2.2521681785583496, 2.2531819343566895, 2.252506971359253, 2.2531309127807617, 2.256279945373535],
            [2.287511110305786, 2.284902811050415, 2.28535795211792, 2.2856361865997314, 2.2816338539123535],
            [2.328660011291504, 2.3119280338287354, 2.330618143081665, 2.330143928527832, 2.328179121017456],
            [2.3237390518188477, 2.3256571292877197, 2.318053960800171, 2.317232131958008, 2.3278181552886963]
        ]}),

])

def geom_mean(xs):
    return reduce(lambda x,y: x*y, xs, 1.0)**(1.0 / len(xs))

import numpy as np
sls = []
spds = []
totals = []
for bench_name, interps in benchs.items():
    slowdown = np.mean(interps["pypy-stm-nojit"][0]) / np.mean(interps["pypy-nojit"][0])
    speedup = np.mean(interps["pypy-stm-nojit"][0]) / np.mean(interps["pypy-stm-nojit"][3])
    total = np.mean(interps["pypy-nojit"][0]) / np.mean(interps["pypy-stm-nojit"][3])
    print "===========",bench_name, "=========="
    print "overhead STM-GIL", bench_name, ":", slowdown
    print "stm-own speedup", bench_name, ":", speedup
    print "total speedup STM over GIL", bench_name, ":", total
    sls.append(slowdown)
    spds.append(speedup)
    totals.append(total)


print "geom,max slowdown of STM", geom_mean(sls), np.max(sls)
print "geom,max speedup of STM", geom_mean(spds), np.max(spds)
print "geom,max total speedup", geom_mean(totals), np.max(totals)




def main():
    global fig

    print "Draw..."
    legend = plot_speedups(plt, 2, 4, benchs, interps_styles)

    #axs[0].set_ylim(0, len(x))
    #ax.set_yticks([r+0.5 for r in range(len(logs))])
    #ax.set_yticklabels(range(1, len(logs)+1))
    #axs[0].set_xticks([])

    # def label_format(x, pos):
    #     return "%.2f" % (abs((x - left) * 1e-6), )
    # major_formatter = matplotlib.ticker.FuncFormatter(label_format)
    # axs[0].xaxis.set_major_formatter(major_formatter)

    #ax.set_title("Memory Usage in Richards")

    plt.draw()
    #plt.show()
    print "Drawn."

    file_name = "performance_nojit.pdf"
    plt.savefig(file_name, format='pdf',
                bbox_extra_artists=(legend,),
                bbox_inches='tight', pad_inches=0)



if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser(description='Plot stm log files')
    parser.add_argument('--figure-size', default='7x10',
                        help='set figure size in inches: format=6x4')
    parser.add_argument('--font-size', default='10.0',
                        help='set font size in pts: 10.0')
    parser.add_argument('--png-dpi', default='300',
                        help='set dpi of png output: 300')


    args = parser.parse_args()
    matplotlib.rcParams.update(
        {'figure.figsize': tuple(map(int, args.figure_size.split('x'))),
         'font.size': float(args.font_size),
         'savefig.dpi': int(args.png_dpi),
         })


    main()
