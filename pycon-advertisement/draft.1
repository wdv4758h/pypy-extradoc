Support PyPy
============

While we are happy to help you getting your code to work with PyPy,
you may want something more than a bit of guidance over IRC. Some
members of the PyPy development team are available for consulting
work. Here are some examples of what we could do for you:

- community development: On site mentoring of developers, company sprints
- support: Commercial support contracts -- if it breaks, we will fix it
- speed improvements for you:  We could profile and analyse your code, 
  looking for ways  to make it more 'jit-friendly', and then either simply 
  report what we found, or make the suggested changes in your codebase.
- speed improvements for you: There are many ways we could improve our jit.
  You could pay us to make the improvements which do the most for your 
  codebase first.
- speed improvements: work on making our generational GC more sophisticated
- porting: Make PyPy support Python 3.0
- porting: We could port  your favourite C/C++ extension library to RPython, 
  so that PyPy can jit it.
- porting: Build a facility for separate compilation, so you can more easily 
  port your own extension libraries to RPython.
- integration: integrate PyPy with Cython
- integration: integrate PyPy with NumPy
- whole new world: Make Stackless Python work with the JIT
- whole new world: Write a backend for your favourite CPU architecture (the 
  X86, amd64 and ARM are already there)
- whole new world: Make the JIT work with the JVM
- whole new world: Make the JIT work with .NET
- whole new world: Write an interpreter for your second favourite dynamic 
  programming language, so it can be sped up as well.
- whole new world: Build a code obfuscator that is not trivial to work around


Send an email to pypy@openend.se and we will get in touch with you.
